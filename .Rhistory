g3 <- g2 + theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))+
theme(strip.text.x = element_text(size = 14))+
theme(legend.position = "none")
g4<-g3+geom_abline(aes(intercept=ints, slope=slopes), lwd=2, lty=c(1,5), col="black", data=df)
plot(g4)
FOG_lab<-c("FOG-","FOG+")
ints<-c((0.09577-0.5*-0.01233),(0.09577+0.5*-0.01233))
slopes<-c((-0.0002517-0.5*0.00149),(-0.0002517+0.5*0.00149))
df<-data.frame(FOG_lab,ints,slopes)
g1<-ggplot(Backward, aes(x = APA, y = stepWidth, group = subject)) +
geom_point(aes(bg=subject), pch=21, size=2, col="black") +
stat_smooth(aes(col=subject), method=lm, se=FALSE, size=1) +
scale_color_grey()+scale_fill_grey()+
facet_wrap(~FOG_lab)
g2<-g1+scale_y_continuous(name = "Step Width (m)") +
scale_x_continuous(name = "Backward APA")
g3 <- g2 + theme_bw()+theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(legend.text=element_text(size=14), legend.title=element_text(size=14))+
theme(strip.text.x = element_text(size = 14))+
theme(legend.position = "none")
g4<-g3+geom_abline(aes(intercept=ints, slope=slopes), lwd=2, lty=c(1,5), col="black", data=df)
plot(g4)
citation("influence.ME")
?drm()
citation()
citation(lme4)
citation("lme4")
citation("drc")
citation("ggplot2")
citation("lmerTest")
x  <- seq(-2, 2, 0.05)
y1 <- pnorm(x)
y2 <- pnorm(x,1,1)
plot(x,y1,type="l",col="red")
plot(x,y2,type="l",col="green")
plot(x,y1,type="l",col="red")
lines(x,y2,col="green")
plot(x,y1,type="p",col="red")
points(x,y2,col="green")
# Loading the essential libraries.
library("ggplot2"); library("lme4"); library("car"); library("dplyr"); library("lmerTest");
require(ggplot2)
require(car)
require(corrplot)
ad <- read.csv("https://raw.githubusercontent.com/keithlohse/LMER_Clinical_Science/master/data/data_nonlinear_v4.csv")
head(ad
)
install.packages("dplyr")
install.packages("lmerTest")
# Loading the essential libraries.
library("ggplot2"); library("lme4"); library("car"); library("dplyr"); library("lmerTest");
library("ggplot2");
## ----------------------- Basic Data Visualization ----------------------------
## FIM scores by gender and time -----------------------------------------------
g1<-ggplot(DATA, aes(x = month, y = rasch_FIM)) +
geom_point(aes(fill=as.factor(subID)), pch=21, size=2, stroke=1.25) +
geom_line(aes(group=subID)) +
facet_wrap(~AIS_grade)
list.files()
# Import the .csv file into R.
# We will save this file in the R environment as an object called "DATA".
DATA<-read.csv("./data_session1.csv", header = TRUE, sep=",",
na.strings=c("NA","NaN"," ",""))
# Use the head() function to check the structure of the data file.
head(DATA)
## ----------------------- Basic Data Visualization ----------------------------
## FIM scores by gender and time -----------------------------------------------
g1<-ggplot(DATA, aes(x = month, y = rasch_FIM)) +
geom_point(aes(fill=as.factor(subID)), pch=21, size=2, stroke=1.25) +
geom_line(aes(group=subID)) +
facet_wrap(~AIS_grade)
# Keith Lohse
# NeuroRehabilitation Informatics Lab 2018-10-21
library("ggplot2"); library("car"); library("dplyr")
setwd("C:/Otter/Collaboration/Kristin Sainani/MBI_sim")
# Simulation of Between Subjects Data
set.seed(1)
mu1<-0
mu2<-0
sigma1<-1
sigma2<-1
pop1<-rnorm(n=10000, mean=mu1, sd=sigma1)
pop2<-rnorm(n=10000, mean=mu2, sd=sigma2)
n1 = 10 #size of sample 1
n2 = 10 #size of sample 2
index<-c(1:10000) # Set the upper limit to the number of experiments you want to run
DATA<-data.frame(index) #We will create an empty dataframe to store our output in...
DATA$sp<-NULL
DATA$ES <- NULL
DATA$SE <- NULL
DATA$q05 <- NULL
DATA$q95 <- NULL
DATA$q25 <- NULL
DATA$q75 <- NULL
DATA$q025 <- NULL
DATA$q975 <- NULL
DATA$t_obs <- NULL
DATA$p_value <- NULL
DATA$p_harm <- NULL
DATA$p_benefit <- NULL
for (i in 1:length(DATA$index)) {
s1 <- sample(pop1, n1, replace = FALSE, prob = NULL)
s2 <- sample(pop2, n2, replace = FALSE, prob = NULL)
m1<-mean(s1)
m2<-mean(s2)
sd1<-sd(s1)
sd2<-sd(s2)
t_crit_90<-qt(0.95, (n1+n2-2))
t_crit_25<-qt(0.75, (n1+n2-2))
t_crit_95<-qt(0.975, (n1+n2-2))
DATA$sp[i] = sqrt(((n1-1)*(sd1*sd1)+(n2-1)*(sd2*sd2))/(n1+n2-2))
DATA$ES[i] <- (m1-m2)
DATA$SE[i] <- sqrt(((DATA$sp[i]^2)/n1)+((DATA$sp[i]^2)/n2))
DATA$q05[i] <- DATA$ES[i]-t_crit_90*DATA$SE[i]
DATA$q95[i] <- DATA$ES[i]+t_crit_90*DATA$SE[i]
DATA$q25[i] <- DATA$ES[i]-t_crit_25*DATA$SE[i]
DATA$q75[i] <- DATA$ES[i]+t_crit_25*DATA$SE[i]
DATA$q025[i] <- DATA$ES[i]-t_crit_95*DATA$SE[i]
DATA$q975[i] <- DATA$ES[i]+t_crit_95*DATA$SE[i]
DATA$t_obs[i] <- DATA$ES[i]/DATA$SE[i]
DATA$p_value[i] <- 2*pt(abs(DATA$ES[i]/DATA$SE[i]), (n1+n2-2), lower=FALSE)
DATA$p_harm[i] <- pt((DATA$ES[i]-(-0.2))/DATA$SE[i], (n1+n2-2), lower=FALSE)
DATA$p_benefit[i] <- pt((DATA$ES[i]-(0.2))/DATA$SE[i], (n1+n2-2), lower=TRUE)
}
# Establishing Statistical Significance Using NHST
DATA$sig<-as.factor(DATA$p_value<0.05)
levels(DATA$sig)<- list("NonSig"="FALSE",
"Sig" = "TRUE")
# Exporting the Full Dataset
write.csv(DATA, "./MBI_test.csv")
# Exporting the Full Dataset
write.csv(DATA, "./MBI_figures.csv")
t_crit_90<-qt(0.95, (n1+n2-2))
t_crit_25<-qt(0.75, (n1+n2-2))
t_crit_95<-qt(0.975, (n1+n2-2))
-0.05-t_crit90*0.060545
-0.05-t_crit_90*0.060545
-0.05+t_crit_90*0.060545
-0.05-t_crit_25*0.060545
-0.05+t_crit_25*0.060545
-0.05-t_crit_95*0.060545
-0.05+t_crit_95*0.060545
2*pt(0.82583, (n1+n2-2), lower=FALSE)
pt(((-0.05)-(-0.2))/0.060545, (n1+n2-2), lower=FALSE)
pt(((-0.05)-(-0.2))/0.060545, (n1+n2-2), lower=TRUE)
pt(((-0.05)-(0.2))/0.060545, (n1+n2-2), lower=TRUE)
getwd()
setwd("C:/Otter/Collaboration/Kristin Sainani/MBI_sim")
list.files()
## MBI -------------------------------------------------------------------------
g1<- ggplot(GRAPH, aes(x = index2, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.5) +
geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
GRAPH<-read.csv("./MBI_figures.csv", header = TRUE, sep=",",
na.strings=c("NA","NaN"," ",""))
## MBI -------------------------------------------------------------------------
g1<- ggplot(GRAPH, aes(x = index2, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.5) +
geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
## MBI -------------------------------------------------------------------------
g1<- ggplot(GRAPH, aes(x = index, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.5) +
geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
g2<- g1 + coord_flip() +
ggtitle("Simulated Group Comparison (n/group=10)") +
theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=16, face="bold"),
plot.title=element_text(size=16, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
# axis.title.y=element_blank(),
legend.position = "none")
plot(g2)
## MBI -------------------------------------------------------------------------
g1<- ggplot(GRAPH, aes(x = index, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.5) +
geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
g2<- g1 + coord_flip() +
ggtitle("Simulated Group Comparison (n/group=10)") +
theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=16, face="bold"),
plot.title=element_text(size=16, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
# axis.title.y=element_blank(),
legend.position = "none")
plot(g2)
GRAPH<-read.csv("./MBI_figures.csv", header = TRUE, sep=",",
na.strings=c("NA","NaN"," ",""))
## MBI -------------------------------------------------------------------------
g1<- ggplot(GRAPH, aes(x = index, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.5) +
geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
g2<- g1 + coord_flip() +
ggtitle("Simulated Group Comparison (n/group=10)") +
theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=16, face="bold"),
plot.title=element_text(size=16, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
# axis.title.y=element_blank(),
legend.position = "none")
plot(g2)
## MBI -------------------------------------------------------------------------
g1<- ggplot(GRAPH, aes(x = index, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.5) +
#geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
g2<- g1 + coord_flip() +
ggtitle("Simulated Group Comparison (n/group=10)") +
theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=16, face="bold"),
plot.title=element_text(size=16, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
# axis.title.y=element_blank(),
legend.position = "none")
plot(g2)
## MBI -------------------------------------------------------------------------
g1<- ggplot(GRAPH[c(6,7),], aes(x = index, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.5) +
#geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
#scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
g2<- g1 + coord_flip() +
ggtitle("Simulated Group Comparison (n/group=10)") +
theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=16, face="bold"),
plot.title=element_text(size=16, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
# axis.title.y=element_blank(),
legend.position = "none")
plot(g2)
## MBI -------------------------------------------------------------------------
g1<- ggplot(GRAPH[c(6,7),], aes(x = index, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.25) +
#geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
#scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
g2<- g1 + coord_flip() +
ggtitle("Simulated Group Comparison (n/group=10)") +
theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=16, face="bold"),
plot.title=element_text(size=16, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
# axis.title.y=element_blank(),
legend.position = "none")
plot(g2)
## MBI -------------------------------------------------------------------------
head(GRAPH, 9)
g1<- ggplot(GRAPH[c(3,4),], aes(x = index, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.25) +
#geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
#scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
g2<- g1 + coord_flip() +
ggtitle("Simulated Group Comparison (n/group=10)") +
theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=16, face="bold"),
plot.title=element_text(size=16, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
# axis.title.y=element_blank(),
legend.position = "none")
plot(g2)
g1<- ggplot(GRAPH[c(3,4),], aes(x = index, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.25) +
#geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
#scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
g2<- g1 + coord_flip() +
#ggtitle("Simulated Group Comparison (n/group=10)") +
theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=16, face="bold"),
plot.title=element_text(size=16, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
# axis.title.y=element_blank(),
legend.position = "none")
plot(g2)
g1<- ggplot(GRAPH[c(2,4),], aes(x = index, y = ES)) +
geom_errorbar(aes(ymin=q05, ymax=q95), lwd=1.5, width=.25) +
#geom_errorbar(aes(ymin=q25, ymax=q75), col="red", lwd=1.5, width=.5) +
geom_point(aes(), pch=21, fill="white", color="black", size=3)+
geom_hline(yintercept=c(-0.20,0.20), lty=2, lwd=1) +
#scale_x_continuous(name = "Simulated Experiment") +
scale_y_continuous(name = "Effect Size", limits=c(-2,2))
plot(g1)
g2<- g1 + coord_flip() +
#ggtitle("Simulated Group Comparison (n/group=10)") +
theme(axis.text=element_text(size=16, color="black"),
axis.title=element_text(size=16, face="bold"),
plot.title=element_text(size=16, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
axis.text.y=element_blank(),
axis.title.y=element_blank(),
axis.ticks.y=element_blank(),
# axis.title.y=element_blank(),
legend.position = "none")
plot(g2)
# Loading the essential libraries.
library("ggplot2"); library("lme4"); library("car"); library("dplyr"); library("lmerTest");
##----------------------- Data Cleaning and QA ---------------------------------
## Setting the Directory -------------------------------------------------------
getwd()
setwd("~/GitHub/LMER_Clinical_Science")
list.files()
# Import the .csv file into R.
# We will save this file in the R environment as an object called "DATA".
DATA<-read.csv("./data/data_session1.csv", header = TRUE, sep=",",
na.strings=c("NA","NaN"," ",""))
# Use the head() function to check the structure of the data file.
head(DATA)
## ----------------------- Basic Data Visualization ----------------------------
## FIM scores by gender and time -----------------------------------------------
g1<-ggplot(DATA, aes(x = month, y = rasch_FIM)) +
geom_point(aes(fill=as.factor(subID)), pch=21, size=2, stroke=1.25) +
geom_line(aes(group=subID)) +
facet_wrap(~AIS_grade)
g2<-g1+scale_x_continuous(name = "Time from Admission (Months)", breaks=c(0:18)) +
scale_y_continuous(name = "Rasch-Scaled FIM Score (0-100)",limits=c(0,100))
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(strip.text.x = element_text(size = 14))+
theme(legend.position="none")
plot(g3)
## Linear Fit for each person --------------------------------------------------
g1<-ggplot(DATA, aes(x = month, y = rasch_FIM)) +
geom_point(aes(fill=as.factor(subID)), pch=21, size=2, stroke=1.25) +
stat_smooth(aes(col=subID), se=FALSE, method="lm") +
facet_wrap(~AIS_grade)
g2<-g1+scale_x_continuous(name = "Time from Admission (Months)", breaks=c(0:18)) +
scale_y_continuous(name = "Rasch-Scaled FIM Score (0-100)",limits=c(0,100))
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(strip.text.x = element_text(size = 14))+
theme(legend.position="none")
plot(g3)
## Linear Fit by gender --------------------------------------------------------
g1<-ggplot(DATA, aes(x = month, y = rasch_FIM)) +
geom_point(aes(fill=sex), pch=21, size=2, stroke=1.25) +
stat_smooth(aes(lty=sex), col="black", lwd=1.5,se=FALSE, method="lm") +
facet_wrap(~AIS_grade)
g2<-g1+scale_x_continuous(name = "Time from Admission (Months)", breaks=c(0:18)) +
scale_y_continuous(name = "Rasch-Scaled FIM Score (0-100)",limits=c(0,100))
g3 <- g2 + theme_bw() +
theme(axis.text=element_text(size=14, colour="black"),
axis.title=element_text(size=14,face="bold")) +
theme(strip.text.x = element_text(size = 14))
plot(g3)
# Understanding basic random-effects ------------------------------------------
# Random Intercepts Model ----
raneff_00<-lmer(rasch_FIM~
# Fixed-effects
1+
# Random-effects
(1|subID), data=DATA, REML=FALSE)
summary(raneff_00)
ranef(raneff_00)
# Remember that these are deviates from the fixed-effect, so if we want to see
# what the model is actually estimating for each person, we need to add the
# fixed-effect back in:
fixef(raneff_00)
# We could do this manually, adding the fixef() output to the ranef() output,
# but we can also get the indivudal values using the coef() function:
coef(raneff_00)$subID
# If you want the actual predictions of the model, rather than the estimated
# effects, you can use the fitted() function.
# Note the difference in the size of these arrays. The fitted() function gives
# us a prediction for each person at each point.
fitted(raneff_00)
# To help us understand the model, we can plot these predictions for each person.
# First, lets take a subset of the first 10 people:
first10<-DATA[c(1:180),]
# Second, we'll make a smaller dataset with the predictions for these 10:
PRED<-data.frame(subID=c("s01","s02","s03","s04","s05","s06","s07","s08","s09", "s10"),
Intercepts=c(coef(raneff_00)$subID[c(1:10),]))
PRED
g1<-ggplot(first10, aes(x = month, y = rasch_FIM)) +
geom_point(fill="grey", pch=21, size=2, stroke=1.25) +
geom_line(aes(group=subID)) +
facet_wrap(~subID, ncol=3)
g2<-g1+scale_x_continuous(name = "Time from Admission (Months)", breaks=c(0:18)) +
scale_y_continuous(name = "Rasch-Scaled FIM Score (0-100)",limits=c(0,100))
print(g2)
g3<-g2+geom_abline(aes(intercept=Intercepts, slope=0), col="red", lwd=1.5, PRED)
plot(g3)
# Fixed Slope Model ----
raneff_01<-lmer(rasch_FIM~
# Fixed-effects
1+month+
# Random-effects
(1|subID), data=DATA, REML=FALSE)
summary(raneff_01)
# Note that when we run the ranef() function, there is still only a random effect
# of the intercept:
ranef(raneff_01)
# When we run the fixef() function, however, now have both a slopes and intercept:
fixef(raneff_01)
# When we run the coef() function, you can see that each person has a unique
# intercept, but everyone has the same slope:
coef(raneff_01)$subID
# As before, let's make a smaller dataset with the predictions for these 10 people:
PRED<-data.frame(subID=c("s01","s02","s03","s04","s05","s06","s07","s08","s09", "s10"),
Intercepts=c(coef(raneff_01)$subID[c(1:10),1]),
Slopes=c(coef(raneff_01)$subID[c(1:10),2]))
PRED
# We can now plot the predictions for each person, note that although each person
# has a different intercept, they all have the same slope.
g1<-ggplot(first10, aes(x = month, y = rasch_FIM)) +
geom_point(fill="grey", pch=21, size=2, stroke=1.25) +
geom_line(aes(group=subID)) +
facet_wrap(~subID, ncol=3)
g2<-g1+scale_x_continuous(name = "Time from Admission (Months)", breaks=c(0:18)) +
scale_y_continuous(name = "Rasch-Scaled FIM Score (0-100)",limits=c(0,100))
g3<-g2+geom_abline(aes(intercept=Intercepts, slope=Slopes), col="red", lwd=1.5, PRED)
plot(g3)
# Random Slopes and Intercepts Model ----
raneff_02<-lmer(rasch_FIM~
# Fixed-effects
1+month+
# Random-effects
(1+month|subID), data=DATA, REML=FALSE)
summary(raneff_02)
# Now when we run the ranef() function, there is random effect for both the
# slope and the intercept:
ranef(raneff_02)
# Now when we run the ranef() function, there is random effect for both the
# slope and the intercept:
ranef(raneff_02)
# When we run the fixef() function, it returns the group-level intercept and slope:
fixef(raneff_02)
# When we run the coef() function, the random-effects (deviates) are combined
# with the group-level fixed-effects to get a unique slope and intercept
# for each person:
coef(raneff_02)$subID
# As before, let's make a smaller dataset with the predictions for these 10 people:
PRED<-data.frame(subID=c("s01","s02","s03","s04","s05","s06","s07","s08","s09", "s10"),
Intercepts=c(coef(raneff_02)$subID[c(1:10),1]),
Slopes=c(coef(raneff_02)$subID[c(1:10),2]))
PRED
# Now we can plot the predictions for each person, note that each person has a
# different intercept and slope.
g1<-ggplot(first10, aes(x = month, y = rasch_FIM)) +
geom_point(fill="grey", pch=21, size=2, stroke=1.25) +
geom_line(aes(group=subID)) +
facet_wrap(~subID, ncol=3)
g2<-g1+scale_x_continuous(name = "Time from Admission (Months)", breaks=c(0:18)) +
scale_y_continuous(name = "Rasch-Scaled FIM Score (0-100)",limits=c(0,100))
g3<-g2+geom_abline(aes(intercept=Intercepts, slope=Slopes, col=subID), lwd=1.5, PRED)
plot(g3)
# We can do this is by analyzing the the variance explained by each model.
anova(raneff_00,raneff_01,raneff_02)
